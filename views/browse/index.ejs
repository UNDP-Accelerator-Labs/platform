<!DOCTYPE html>
<%
	// CREATE ALIASES
	const activity = locals.metadata.page.activity
	const publicpage = locals.metadata.page.public || activity === 'preview'
	const modules = locals.metadata.site.modules
	const metafields = locals.metadata.site.metafields
	const space = locals.metadata.page.space
	const object = locals.metadata.page.object
	const query = locals.metadata.page.query
	const languages = locals.metadata.site.languages
	const language = locals.metadata.page.language
	const rights = locals.metadata.user.rights
	const pagedisplay = locals.metadata.page.display
	const pages = locals.metadata.page.count

	let mapscale = locals.metadata.page.mscale
	// THIS IS FOR PUBLIC PINBOARDS: TO ENSURE THAT THE DEFINED MAP SCALE IS PRESERVED
	if (space === 'pinned' && (!locals.pinboard?.editable || activity === 'preview') && locals.pinboard?.display_map) {
		if (locals.pinboard?.display_fullscreen) mapscale = 'full-screen'
		else mapscale = 'contain'
	}

	const sections = locals.pinboard?.sections
	const section = query.section?.[0]
	const editable_pinboard = (activity !== 'preview' && object === 'pads' && locals.pinboard?.editable)

	const logged = locals.metadata.user.uuid !== null

	const slides = locals.sample_images

	// const is_intropage = (publicpage
	// 	&& object === 'pads'
	// 	&& space !== 'pinned'
	// 	&& mapscale !== 'full-screen'
	// 	&& locals.metadata.page.id === 1
	// 	&& slides?.length > 0)

	const is_intropage = false
	const welcome_module = locals.metadata.site.welcome_module
%>
<html lang='<%- language %>'>
<head>

<%- include ('../partials/head.ejs') %>
<%- include('../partials/pagestats.ejs') %>

<script type='text/javascript' src='/js/browse/index.js'></script>

</head>

<body>

<%- include ('../partials/translations.ejs') %>

<%- include ('../partials/navigate/menu-languages.ejs') %>
<%- include ('../partials/modals.ejs') %>

<%- include ('../partials/exploration.ejs') %>
<%- include ('./modules/download.ejs') %>
<%- include('./render.ejs') %>


<% if (is_intropage) { %>
<div class='public-page-header'>
	<div class='<%- welcome_module %>'>
		<% if (welcome_module === 'mosaic') { %>
			<%- include ('./modules/mosaic.ejs') %>
		<% } else if (welcome_module === 'carousel') { %>
			<%- include ('./modules/carousel.ejs') %>
		<% } %>
		<button class='scroll-nav'><label class='rotate'>&rsaquo;</label></button>
	</div>
	<h1 class='site-title scroll-target'><%- locals.metadata.site.title %></h1>
	<% if (locals.metadata.page.instance_title) { %><h2><%- locals.metadata.page.instance_title %></h2><% } %>
	<% if (locals.metadata.site.description?.[language]) { %><p class='lead'><%- locals.metadata.site.description[language] %></p><% } %>
</div>
<% } %>

<div class='sticky-container'>
	<div class='main-content <% if (mapscale !== "full-screen") { %> force-height<% } %>'>
		<header<% if (mapscale === 'full-screen' || pagedisplay === 'slideshow') { %> class='folded'<% } %>>
			<% if (!is_intropage) { %><div class='inner'>
			<% } else { %><div class='inner fixed'><% } %>
				<%- include ('../partials/menu-logo.ejs') %>
			</div>
		</header>

		<div class='browse <%- pagedisplay %><% if (publicpage) { %> public<% } %><% if (locals.metadata.page.instance_title) {%> instance<% } %>'>
			<% if (locals.metadata.page.instance_title) { %>
				<h1 class='instance-title'><%- locals.metadata.page.instance_title %></h1>
			<% } %>
			<% if (locals.metadata.page.instanceReadCount) { %>
				<div class='engagement-group page-stats'>
					<button class='engagement engagement-reads'>
						<img class='engagement-reads-icon' src='/imgs/icons/i-eye.svg' />
						<span class='engagement-reads-count'><%= locals.metadata.page.instanceReadCount ?? '-' %></span>
					</button>
				</div>
			<% } %>
			<% if (!publicpage
				&& rights >= (modules.find(d => d.type === object)?.rights.read ?? Infinity)
				&& pagedisplay !== 'slideshow'
				// && !(locals.metadata.page.map && mapscale === 'full-screen')
				&& !locals.metadata.page.instance_title
			) { %>
				<nav class='tabs<% if (mapscale === "full-screen") { %> fill-screen<% } %>'>
					<div class='inner'>
						<div class='xs sm'>
							<div class='spaces'>
								<button class='space google-translate-attr'><%- vocabulary['spaces'][language] %></button>
								<div class='dropdown'>
									<%- include('./modules/tabs.ejs') %>
								</div>
							</div>
							<% if (object === 'pads') { %>
								<div class='btn-group map-scale'>
									<a class='mscale<% if (mapscale === "full-screen") { %> active<% } %>' href='?mscale=<% if (mapscale === "full-screen") { %>contain<% } else { %>full-screen<% } %>'>
										<i class='material-icons google-translate-attr'>public</i>
									</a>
								</div>
							<% } %>
						</div>
						<div class='m lg xl xxl'><%- include('./modules/tabs.ejs') %></div>
					</div>
				</nav>
			<% } %>

			<main>
				<div class='inner'>
					<!-- MULTI-SESSION ALERT -->
					<%- include('../partials/sessions-alert') %>
					<!-- (IF PINBOARD SPACE) PINBOARD TITLE -->
					<% if (space === 'pinned' && locals.pinboard && pagedisplay !== 'slideshow') { %>
						<% if (editable_pinboard) { %>
							<div class='meta-status status-<%- locals.pinboard.status || 0 %>'>
								<form id='pinboard-display-opts' method='GET' action='/publish/pinboards'>
									<input type='hidden' name='id' value='<%- locals.pinboard.id %>'>
									<menu class='opts google-translate-attr'>
										<li>
											<p class='<% if (locals.pinboard.display_map) { %>disabled<% } %>'><%- vocabulary['slideshow'][language] %>: </p>
											<input type='checkbox' class='toggle' data-object='pinboard' data-id='<%= locals.pinboard.id %>' id='display-slideshow' value='true' name='slideshow' <% if (locals.pinboard.slideshow) { %>checked<% } %> <% if (locals.pinboard.display_map) { %>disabled<% } %>>
											<label for='display-slideshow' data-content='<% if (locals.pinboard.slideshow) { %><%- vocabulary["yes"][language] %><% } else { %><%- vocabulary["no"][language] %><% } %>'></label>
										</li>
										<li>
											<p class='<% if (locals.pinboard.slideshow) { %>disabled<% } %>'><%- vocabulary['display filters'][language] %>: </p>
											<input type='checkbox' class='toggle' data-object='pinboard' data-id='<%= locals.pinboard.id %>' id='display-filters' value='true' name='display_filters' <% if (locals.pinboard.display_filters) { %>checked<% } %> <% if (locals.pinboard.slideshow) { %>disabled<% } %>>
											<label for='display-filters' data-content='<% if (locals.pinboard.display_filters) { %><%- vocabulary["yes"][language] %><% } else { %><%- vocabulary["no"][language] %><% } %>'></label>
										</li>
										<li>
											<ul>
												<li>
													<p class='<% if (locals.pinboard.slideshow) { %>disabled<% } %>'><%- vocabulary['display map'][language] %>: </p>
													<input type='checkbox' class='toggle' data-object='pinboard' data-id='<%= locals.pinboard.id %>' id='display-map' value='true' name='display_map' <% if (locals.pinboard.display_map) { %>checked<% } %> <% if (locals.pinboard.slideshow) { %>disabled<% } %>>
													<label for='display-map' data-content='<% if (locals.pinboard.display_map) { %><%- vocabulary["yes"][language] %><% } else { %><%- vocabulary["no"][language] %><% } %>'></label>
												</li>
												<li>
													<p class='<% if (locals.pinboard.slideshow || !locals.pinboard.display_map) { %>disabled<% } %>'><%- vocabulary['full screen'][language] %>: </p>
													<input type='checkbox' class='toggle' data-object='pinboard' data-id='<%= locals.pinboard.id %>' id='display-fullscreen' value='true' name='display_fullscreen' <% if (locals.pinboard.display_fullscreen) { %>checked<% } %> <% if ((locals.pinboard.slideshow) || !locals.pinboard.display_map) { %>disabled<% } %>>
													<label for='display-fullscreen' data-content='<% if (locals.pinboard.display_fullscreen) { %><%- vocabulary["yes"][language] %><% } else { %><%- vocabulary["no"][language] %><% } %>'></label>
												</li>
											</ul>
										</li>
									</menu>
									<div class='btn-group google-translate-attr'>
										<button id='open-pinboard-preview' type='button'><%- vocabulary['preview'][language] %></button>

										<button id='share-pinboard' type='button' data-id='<%= locals.pinboard.id %>' data-contributors='<%- JSON.stringify(locals.pinboard.contributors) %>'>Share</button>
										<!-- TO DO: TRANSLATE -->
										<!-- TO DO: CHECK THIS WORKS WITH THE INJECTION OF DATA -->

										<% if (locals.pinboard.status === 1) { %><button type='submit' class='publish' name='status' value='3'><%- vocabulary['publish'][language] %></button>
										<% } else { %><button type='submit' class='publish' disabled><%- vocabulary['publish'][language] %></button>
										<% } %>
									</div>
								</form>
							</div>
						<% } %>

						<div class='head google-translate-attr'>
							<% if (editable_pinboard) { %>
								<div id='pinboard-title' class='title' data-id='<%= locals.pinboard.id %>' data-placeholder='<%- vocabulary["untitled pad"][language] %>' contenteditable><%- locals.pinboard.title %></div>
								<!-- TO DO: CHECK focus CLASS IS SET THROUGH setup.js WHEN FOCUSING -->

								<% if (!locals.metadata.page.instanceReadCount) { %>
									<div class='engagement-group page-stats'>
										<button class='engagement engagement-reads'>
											<img class='engagement-reads-icon' src='/imgs/icons/i-eye.svg' />
											<span class='engagement-reads-count'><%= locals.pinboard.readCount ?? '-' %></span>
										</button>
									</div>
								<% } %>

								<div id='pinboard-description' class='description lead' data-id='<%= locals.pinboard.id %>' data-placeholder='Provide a short description for this pinboard.' contenteditable><%- (locals.pinboard.description) %></div><!-- TO DO: TRANSLATE -->
								<!-- TO DO: CHECK THIS SAVE PPROPERLY THROUGH js/browse/index.js -->
							<% } else { %>
								<div class='title' data-placeholder='<%- vocabulary["untitled pad"][language] %>'><%- locals.pinboard.title %></div>

								<div class='contributor'><%- vocabulary['curation credit'][language](locals.pinboard.owner, locals.pinboard.ownername, 'contributors') %></div>
								<% if (locals.pinboard?.country) { %><div class='meta meta-country'><%- locals.pinboard?.country %></div><% } %>

								<% if (!locals.metadata.page.instanceReadCount) { %>
									<div class='engagement-group page-stats'>
										<button class='engagement engagement-reads'>
											<img class='engagement-reads-icon' src='/imgs/icons/i-eye.svg' />
											<span class='engagement-reads-count'><%= locals.pinboard.readCount ?? '-' %></span>
										</button>
									</div>
								<% } %>

								<% if (locals.pinboard.description) { %>
									<!-- <div class='description' onblur='partialSave()'><%- (locals.pinboard.description) %></div> -->
									<div class='description lead'><%- (locals.pinboard.description) %></div>
								<% } %>
							<% } %>

							<% if (editable_pinboard || sections?.length) { %>
								<div class='pinboard-sections-container'>
									<nav class='pinboard-sections'>
										<div class='inner'>
											<div class='xs sm'>
												<div class='spaces'>
													<button class='space google-translate-attr'><%- vocabulary['section'][language](true) %></button>
													<div class='dropdown'>
														<%- include('./modules/pinboard-sections.ejs') %>
													</div>
												</div>
											</div>

											<div class='m lg xl xxl'>
												<%- include('./modules/pinboard-sections.ejs') %>
											</div>
										</div>
									</nav>
								</div>
							<% } %>
							<% if (editable_pinboard) {%>
								<div id='pinboard-section-description' class='description<% if (!sections?.length) { %> hide<% } %>' data-id='<%= section %>' data-placeholder='Provide a short description for this pinboard.' contenteditable><%- sections.find(d => d.id === +section)?.description %></div><!-- TO DO: TRANSLATE -->
							<% } else if (sections?.some(d => d.id === +section)) { %>
								<div class='description<% if (!sections?.length) { %> hide<% } %>' data-placeholder='Provide a short description for this pinboard.'><%- sections.find(d => d.id === +section)?.description %></div><!-- TO DO: TRANSLATE -->
							<% } %>
						</div>
					<% } %>

					<!-- SEARCH AND FILTER MENU -->
					<% if (
						!(space === 'pinned'
							&& (!locals.pinboard?.editable || activity === 'preview')
							&& !locals.pinboard?.display_filters)
						&& pagedisplay !== 'slideshow'
					) { %>
						<%- include('./modules/filter') %>
					<% } %>

					<!-- MAP -->
					<% if (
						((locals.metadata.page.map
							&& locals.stats?.filtered > 0)
						&& !(space === 'pinned'
							&& (!locals.pinboard?.editable || activity === 'preview')
							&& !locals.pinboard?.display_map)
						&& pagedisplay !== 'slideshow')
						|| locals.metadata.page.map && mapscale === 'full-screen'
					) { %>
						<%- include ('./modules/map') %>
					<% } else { %>
						<% if (object === 'pads' && pagedisplay !== 'slideshow' && locals.pads?.length === 0) { %>
							<small class='no-results m lg xl xxl google-translate-attr'>
								<%- vocabulary['pads to display'][language](0) %>
							</small>
						<% } %>
					<% } %>

					<!-- STATISTICS IN MOBILE VIEW -->
					<% if (mapscale !== 'full-screen' && pagedisplay !== "slideshow") { %>
						<div class='public-page-panel sm-padding xs sm m lg'>
							<div class='inner'>
								<%- include ('./modules/statistics.ejs') %>
							</div>
						</div>
						<% if (locals.stats?.filtered === 0) { %>
							<small class='no-results xs google-translate-attr'>
								<%- vocabulary['pads to display'][language](0) %>
							</small>
						<% } %>
					<% } %>
				</div>

				<% if (!logged) { %>
					<div class='public-page-panel sm-padding'>
						<div class='inner'>
							<nav class='enter google-translate-attr'>
								<a href='/login'><button type='button' class='highlight'><%- vocabulary['log in'][language] %></button></a>
								<!-- <button type='button' onclick='selectCountry()'>Get in touch</button> -->
								<!-- TO DO: TRANSLATE -->
							</nav>
						</div>
					</div>
				<% } %>

				<div class='outer lg xl xxl'>
					<% if (pages > 1 && pagedisplay !== 'slideshow' && mapscale !== 'full-screen') { %>
						<p class='nav-info google-translate-attr'>&larr; <%- vocabulary['navigate here'][language] %></p>
					<% } %>
				</div>
				<div class='lds-ellipsis hide'><div></div><div></div><div></div><div></div></div>
			</main>
		</div>

		<div class='sidebar xl xxl'>
			<div class='inner'>
				<%# if (pagedisplay !== 'slideshow' && mapscale !== 'full-screen') { %>
				<% if (mapscale !== 'full-screen' && pagedisplay !== "slideshow") { %>
					<%- include ('./modules/statistics.ejs') %>
					<%- include ('../partials/filters.ejs') %>
				<% } %>
			</div>
		</div>
	</div>
</div>

<% if (pagedisplay !== 'slideshow') { %>
	<footer>
		<nav class='pagination xs sm m'>
			<% if (activity === 'browse') { %><%- include('./modules/pagination') %><% } %>
		</nav>
	</footer>
<% } else { %>
	<footer class='slideshow'>
		<div class='inner'>
			<div class='dots'></div>
		</div>
	</footer>
<% } %>


<%- include ('../partials/footer.ejs') %>

<script type='text/javascript' nonce='<%= locals.metadata.page.nonce %>'>
	if (!mediaSize) var mediaSize = getMediaSize()
	const main = d3.select('div.browse main')
	const layout = main.select('div.inner')
	const overview = layout.select('section.overview')

	let page = <% if (!isNaN(locals.metadata.page.id)) { %><%- locals.metadata.page.id %><% } else if (![null, undefined].includes(locals.metadata.page.id)) { %>'<%- locals.metadata.page.id %>'<% } else { %>undefined<% } %>;
	var lazyloading = false

	function renderSections (_data) {
		const sections = layout.addElems('section', 'container <%- object %>', _data)

		sections.addElems('div', 'layout')
		.each(function (d) {
			const section = d3.select(this)
			// THIS IS WHERE THE GROUPING SHOULD HAPPEN FOR FOLLOW UPS AND FORWARDS
			if (mediaSize === 'xs' && '<%- object %>' === 'pads') {
				section.classed('<%- pagedisplay === "slideshow" ? pagedisplay : "columns" %>', true)
				d.data.forEach(c => section.call(renderVignette, { data: c, display: '<%- pagedisplay === "slideshow" ? pagedisplay : "columns" %>' }))
			} else {
				section.classed('<%- pagedisplay %>', true)
				d.data.forEach(c => section.call(renderVignette, { data: c, display: '<%- pagedisplay %>' }))
			}
		})

		<% if (pagedisplay === 'slideshow') { %>initSlideshow()<% } %>
	}

	function renderVignette (_section, _kwargs) {
		const { data, display } = _kwargs

		const entry = new Entry({
			parent: _section,
			data: data,
			display: display,
			language: '<%- language %>'
		})
		// CREATE ALIAS FOR render
		const render = entry.render

		if (display === 'columns') {
			render.img(entry.head)
			render.actions(entry.head)
			// if (mediaSize !== 'xs') render.stats(entry.head)
			// render.tags(entry.body)
			render.title(entry.body)
			render.owner(entry.body)
			// if (data.img?.length === 0) render.txt(entry.body)
			render.txt(entry.body)
			<% if (!publicpage) { %>
				render.metainfo(entry.body)
				render.followup(entry.body)
			<% } %>
			render.tags(entry.body)
			// if (mediaSize === 'xs') render.stats(entry.foot)
			if (mediaSize !== 'xs') render.stats(entry.foot)
			render.engagement(entry.foot)
			render.pin(entry.foot)
			render.delete(entry.outer)
			render.unpublish(entry.outer)
			render.exploration(entry.foot)
		} else if (display === 'slideshow') {
			render.img(entry.head)
			render.owner(entry.metagroup)
			render.title(entry.body)
			render.txt(entry.body)
			render.tags(entry.body)
			render.stats(entry.foot)
		} else {
			render.owner(entry.metagroup)
			render.actions(entry.metagroup)
			render.title(entry.body)
			render.txt(entry.body)
			<% if (!publicpage) { %>
				render.metainfo(entry.body)
				render.followup(entry.body)
			<% } %>
			render.tags(entry.body)
			render.engagement(entry.body)
			render.img(entry.foot)
			render.stats(entry.foot)
			render.pin(entry.inner)
			render.delete(entry.outer)
			render.unpublish(entry.outer)
			render.exploration(entry.foot)
		}
	}

	function initSlideshow () {
		const slideshow = d3.select('div.layout.slideshow')
		const slides = slideshow.selectAll('.slide')

		d3.select('div.browse')
		.addElems('button', 'slide-nav', [{ label: '&lsaquo;', class: 'prev' }, { label: '&rsaquo;', class: 'next' }])
		.each(function (d) { d3.select(this).classed(d.class, true) })
			.classed('hide', d => {
				const sel = d3.select(this)
				let focus_id = 0
				d3.selectAll('.slide').each(function (c, i) {
					if (d3.select(this).classed('slide-in-view')) focus_id = i
				})
				if (d.class === 'prev' && focus_id === 0) {
					<% if (pages && locals.metadata.page.id === 1) { %>
						return true
					<% } else { %>
						return false
					<% } %>
				} else if (d.class === 'next' && focus_id === slides.size() - 1) {
					<% if (pages && locals.metadata.page.id === pages) { %>
						return true
					<% } else { %>
						return false
					<% } %>
				} else return false
			}).html(d => d.label)
		.on('click', d => {
			if (d.class === 'prev') switchslide(idx - 1)
			else if (d.class === 'next') switchslide(idx + 1)
		}).on('mouseup', function () {
			d3.event.stopPropagation()
			// LOSE FOCUS OF THIS BUTTON TO RE-ENABLE KEYBOARD NAVIGATION
			this.blur()
		})
		// ADD DOTS
		d3.select('footer .dots').addElems('div', 'dot', new Array(slides.size()).fill(0))
		.classed('highlight', (d, i) => i === 0)
		.on('click', (d, i) => { switchslide(i) })

		let idx = 0
		const slidewidth = slides.node().clientWidth || slides.node().offsetWidth || slides.node().scrollWidth

		function switchslide (i) {
			slideshow.node().scrollTo({
				top: 0,
				left: i * slidewidth,
				behavior: 'smooth'
			})

			if (i > slides.size() - 1) {
				<% if (pages && locals.metadata.page.id < pages) { %>
					const url = new URL(window.location)
					const queryparams = new URLSearchParams(url.search)
					queryparams.set('page', page + 1)
					window.location = `${url.pathname}?${queryparams.toString()}`
				<% } %>
			} else if (i < 0) {
				<% if (pages && locals.metadata.page.id > 1) { %>
					// WE KEEP THE pages AT THE BEGINNING TO MAKE SURE THE PAGINATION SCHEMA IS NUMERIC (FOR EXAMPLE, IN THE CASE OF CONTRIBUTORS, IT IS ALPHABETIC)
					const url = new URL(window.location)
					const queryparams = new URLSearchParams(url.search)
					queryparams.set('page', page - 1)
					window.location = `${url.pathname}?${queryparams.toString()}`
				<% } %>
			}

			return idx = i
		}

		slideshow.on('scroll', function () {
			if (this.scrollLeft % slidewidth === 0) {
				idx = Math.round(this.scrollLeft / slidewidth)
				d3.selectAll('.dot').classed('highlight', (d, i) => i === idx)
				d3.selectAll('button.slide-nav').classed('hide', d => {
					if (d.class === 'prev' && idx === 0) {
						<% if (pages && locals.metadata.page.id === 1) { %>
							return true
						<% } else { %>
							return false
						<% } %>
					} else if (d.class === 'next' && idx === slides.size() - 1) {
						<% if (pages && locals.metadata.page.id === pages) { %>
							return true
						<% } else { %>
							return false
						<% } %>
					} else return false
				})
			}
		})
	}


	// THIS IS THE LAZY LOADING MECHANISM
	if (<%- JSON.parse(locals.metadata.page.lazyload) %>) {
		window.onscroll = async function (ev) {
			if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight && !lazyloading) {
				console.log('hit the bottom')
				main.select('.lds-ellipsis').classed('hide', false)

				if (!isNaN(page)) page ++
				lazyloading = true

				const url = new URL(window.location)
				const queryparams = new URLSearchParams(url.search)
				queryparams.set('page', page)

				const response = await GET(`?${queryparams.toString()}`) // NO TARGET NEEDED SINCE SAME AS CURRENT PAGE

				d3.selectAll('section.container div.layout')
				.each(function (d) {
					const section = d3.select(this)
					response.sections.find(s => s.status === d.status).data.forEach(c => section.call(renderVignette, { data: c, display: '<%- pagedisplay %>' }))
				})

				if (response.count < <%- locals.stats?.filtered || 0 %>) lazyloading = false
				else main.select('.lds-ellipsis').classed('hide', true)
			}
		}
	} else { // PAGINATION MECHANISM
		d3.selectAll('.pagination a.page-link:not(.static)').each(function () {
			const sel = d3.select(this)
			const url = new URL(window.location)
			const queryparams = new URLSearchParams(url.search)
			queryparams.set('page', sel.attr('data-page'))
			sel.attr('href', `?${queryparams.toString()}`)
		})
	}

	<% if (pagedisplay === 'slideshow') { %>
		window.addEventListener('keydown', function (e) {
			// SET THE LEFT/RIGHT KEYBOARD NAVIGATION IF IN SLIDESHOW DISPLAY
			if (document.activeElement === document.body) { // NOTHING IS IN FOCUS/ BEING EDITED
				if (e.key === 'ArrrowRight' || e.keyCode === 39) {
					d3.select('button.slide-nav.next:not(.hide)').node()?.click()
				}
				if (e.key === 'ArrowLeft' || e.keyCode === 37) {
					d3.select('button.slide-nav.prev:not(.hide)').node()?.click()
				}
			}
		})
	<% } %>

	window.addEventListener('keyup', function (e) {
		e = e || event
		if (e.key === 'Escape' || e.keyCode === 27) {
			d3.selectAll('.modal').remove()

			<% if (pagedisplay === 'slideshow') { %>
				const url = new URL(window.location)
				const queryparams = new URLSearchParams(url.search)
				queryparams.delete('display')
				window.location = `${url.pathname}?${queryparams.toString()}`
			<% } %>
		}
	})

	window.onload = function () {
		<% if (!mapscale || mapscale === 'contain') { %>
			renderSections(<%- JSON.stringify(locals.sections) %>)
		<% } %>
	}
</script>
</body>
</html>