<% 
	// CREATE ALIASES
	const metafields = locals.metadata.site.metafields
	const space = locals.metadata.page.space
	const object = locals.metadata.page.object
	const query = locals.metadata.page.query
	const language = locals.metadata.page.language
%>

<script type='text/javascript'>
	async function setDownloadOptions () {
		const target_opts = [
			{
				label: '.csv',
				value: 'csv',
				type: 'radio',
				required: true
			},
			{
				label: '.xslx',
				value: 'xlsx',
				type: 'radio',
				required: true
			},
			{
				label: '.json',
				value: 'json',
				type: 'radio',
				required: true
			},
			{
				label: '.geojson',
				value: 'geojson',
				type: 'radio',
				required: true
			}
		]

	<% if (['pads', 'mobilizations'].includes(object)) { %>
		
		const formdata = { action: '/apis/download/pads',  method: 'POST' }
		const message = '<%- vocabulary["select download options"][language] %>'
		const opts = []
		opts.push({ node: 'select', name: 'output', label: '<%- vocabulary["select format"][language] %>', options: target_opts })
		
		opts.push({ node: 'input', type: 'checkbox', name: 'use_templates', value: true, placeholder: '<%- vocabulary["use templates"][language] %>', checked: true, default: true })
		opts.push({ node: 'input', type: 'checkbox', name: 'include_data', value: true, placeholder: '<%- vocabulary["include data"][language] %>', checked: true, default: true })
		opts.push({ node: 'input', type: 'checkbox', name: 'include_imgs', value: true, placeholder: '<%- vocabulary["include media"][language] %>', default: true })
		
		<% if (metafields.some(d => ['index', 'tag'].includes(d.type))) { %>
			opts.push({ node: 'input', type: 'checkbox', name: 'include_tags', value: true, placeholder: '<%- vocabulary["include tags"][language] %>', default: true })
		<% } %>
		<% if (metafields.some(d => d.type === 'location')) { %>
			opts.push({ node: 'input', type: 'checkbox', name: 'include_locations', value: true, placeholder: '<%- vocabulary["include locations"][language] %>', default: true })
		<% } %>
		<% if (metafields.some(d => !['tag', 'index', 'location'].includes(d.type))) { %>
			opts.push({ node: 'input', type: 'checkbox', name: 'include_metafields', value: true, placeholder: '<%- vocabulary["include metafields"][language] %>', default: true })
		<% } %>

		opts.push({ node: 'input', type: 'checkbox', name: 'include_engagement', value: true, placeholder: '<%- vocabulary["include engagement"][language] %>', default: true })
		opts.push({ node: 'input', type: 'checkbox', name: 'include_comments', value: true, placeholder: '<%- vocabulary["include comments"][language] %>', default: true })

		// IN CASE THIS IS A SINGLE DOWNLOAD
		if (this.name && this.value) opts.push({ node: 'input', type: 'hidden', name: this.name, value: this.value })
		else { // ADD THE PAGE QUERY VARIABLES
			<% Object.keys(query)?.forEach(d => {
				if (Array.isArray(query[d])) { 
					query[d].forEach(c => { %>
						opts.push({ node: 'input', type: 'hidden', name: '<%- d %>', value: '<%- c %>' })
					<% })
				} else { %>
					opts.push({ node: 'input', type: 'hidden', name: '<%- d %>', value: '<%- query[d] %>' })
				<% } 
			}) %>
			opts.push({ node: 'input', type: 'hidden', name: 'space', value: '<%- space %>' })
		}

		opts.push({ node: 'button', type: 'submit', name: 'render', value: true, label: '<%- vocabulary["download"][language] %>' })
	
	<% } else if (object === 'contributors') { %>
		
		const formdata = { action: '/apis/download/contributors',  method: 'POST' }
		const message = '<%- vocabulary["select download options"][language] %>'
		const opts = []
		opts.push({ node: 'select', name: 'output', label: '<%- vocabulary["select format"][language] %>', options: target_opts })

		opts.push({ node: 'input', type: 'checkbox', name: 'include_data', value: true, placeholder: '<%- vocabulary["include data"][language] %>', checked: true, default: true })

		opts.push({ node: 'input', type: 'checkbox', name: 'include_teams', value: true, placeholder: 'Include team information', checked: true, default: true }) // TO DO: TRANSLATE
		opts.push({ node: 'input', type: 'checkbox', name: 'include_contributions', value: true, placeholder: 'Include contributions information', checked: true, default: true }) // TO DO: TRANSLATE

		// ADD THE PAGE QUERY VARIABLES
		<% Object.keys(query)?.forEach(d => {
			if (Array.isArray(query[d])) { 
				query[d].forEach(c => { %>
					opts.push({ node: 'input', type: 'hidden', name: '<%- d %>', value: '<%- c %>' })
				<% })
			} else { %>
				opts.push({ node: 'input', type: 'hidden', name: '<%- d %>', value: '<%- query[d] %>' })
			<% } 
		}) %>
		opts.push({ node: 'input', type: 'hidden', name: 'space', value: '<%- space %>' })

		opts.push({ node: 'button', type: 'submit', name: 'render', value: true, label: '<%- vocabulary["download"][language] %>' })
	<% } %>

		const new_constraint = await renderFormModal({ message, formdata, opts })
	}
</script>