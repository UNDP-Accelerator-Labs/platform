<!DOCTYPE html>

<%
	// CREATE ALIASES
	const modules = locals.metadata.site.modules
	const rights = locals.metadata.user.rights
	const uuid = locals.metadata.user.uuid
	const language = locals.metadata.page.language
	const editable = !locals.data || locals.data.editable
	const object = locals.metadata.page.object
%>

<html lang='<%- language %>'>
<head>

<%- include ('../../partials/head.ejs') %>

<script type='text/javascript' src='/js/contribute/contributor/main.js'></script>
<script type='text/javascript' src='/js/contribute/contributor/save.js'></script>

</head>

<body>

<%- include ('../../partials/translations.ejs') %>
<%- include ('../../partials/navigate/menu-languages.ejs') %>

<div class='main-content fit'>
<header>
	<div class='inner'>
		<%- include ('../../partials/navigate/sidebar.ejs') %>
	</div>
</header>

<div class='filler m'></div>

<div class='fact-sheet'>
	<main id='profile'>
		<div class='inner'>
			<div class='meta-status status-<%- locals.data?.uuid ? 2 : 0 %>'>
				<div class='btn-group'>
					<% if (editable || locals.data?.host_editor) { %>
						<button type='submit' class='save google-translate-attr' form='profile-form' disabled='true'><%- vocabulary['save'][language] %></button>
					<% } %>
				</div>
			</div>
			<div class='head'>
				<div class='title google-translate-attr'><%- vocabulary['contributor profile'][language] %></div>
			</div>
			<div class='body'>
				<form action='/save/contributor' method='POST' id='profile-form' autocomplete='off'>
					<% if (locals.data?.uuid && (editable || locals.data?.host_editor)) { %>
						<input type='hidden' name='id' value='<%- locals.data?.uuid %>'>
					<% } %>
					<% if(!locals.data?.uuid && locals.errormessage) { %>
						<p class='lead errormessage' ><%- locals.errormessage.replace(/\n/g, '<br>') %></p>
					<% } %>
					<% if(locals.data?.uuid && locals.u_errormessage) { %>
						<p class='lead errormessage' ><%- locals.u_errormessage.replace(/\n/g, '<br>') %></p>
					<% } %>
					<div class='main-info info'>
						<ul>
							<li>
								<div class='required'>
									<label class='active'>*</label>
								</div>
								<label class='instruction google-translate-attr'><%- vocabulary['name'][language] %></label>
								<div class='input-group'>
									<input type='text' id='new-name' name='new_name' autocomplete='new-name' value='<%- locals.data?.name %>' required <% if (!editable) { %>disabled<% } %>>
									<label for='new-name' class='google-translate-attr'><%- vocabulary['first and last name'][language] %></label>
								</div>
							</li>
							<li>
								<div class='required'>
									<label class='active'>*</label>
								</div>
								<label class='instruction google-translate-attr'><%- vocabulary['email'][language] %></label>
								<div class='input-group'>
									<input type='email' id='new-email' name='new_email' autocomplete='new-email' pattern='.+@.+\.\w+' value='<%- locals.data?.email %>' required <% if (!editable) { %>disabled<% } %>>
									<label for='new-email' class="google-translate-attr"><%- vocabulary['email address'][language] %></label>
								</div>
							</li>
							<li>
								<div class='required'>
									<label class='active'>*</label>
								</div>
								<label class='instruction google-translate-attr'><%- vocabulary['job title'][language] %></label>
								<div class='input-group'>
									<input type='text' id='new-position' name='new_position' autocomplete='new-position' value='<%- locals.data?.position %>' required <% if (!editable) { %>disabled<% } %>>
									<label for='new-position' class='google-translate-attr'><%- vocabulary['job title'][language] %></label>
								</div>
							</li>
						</ul>
					</div>
					<% if (editable) { %>
						<% if (locals.data?.uuid) { %>
							<button type='button' class='expand-collapsed google-translate-attr' id='reset-password'><%- vocabulary['reset password'][language] %>
								<% if(locals.errormessage) { %>
									<p class='lead errormessage' ><%- locals.errormessage.replace(/\n/g, '<br>') %></p>
								<% } %>
							</button>
							<div class='old-password-info info collapsed'>
								<ul>
									<li>
										<div class='required'>
											<label class='active'>*</label>
										</div>
										<label class='instruction google-translate-attr'><%- vocabulary['old password'][language] %></label>
										<div class='input-group'>
											<input type='password' id='old-password' name='old_password' autocomplete='old-password' <% if (!locals.data?.uuid) { %>required<% } %> <% if (!editable) { %>disabled<% } %>>
											<label for='old-password' class='google-translate-attr'><%- vocabulary['password'][language] %></label>
										</div>
									</li>
									<li>
										<div class='required'>
											<label class='active'>*</label>
										</div>
										<button type='button' class='expand-collapsed google-translate-attr' id='check-old-password'><%- vocabulary['verify old password'][language] %></button>
									</li>
								</ul>
							</div>
						<% } %>
						<% if (locals.data?.uuid) { %>
						<div class='password-info info <% if (locals.data?.uuid) { %>collapsed<% } %>'>
							<ul>
								<li>
									<div class='required'>
										<label class='active'>*</label>
									</div>
									<% if (locals.data?.uuid) { %>
										<label class='instruction google-translate-attr'><%- vocabulary['new password'][language] %></label>
									<% } else { %>
										<label class='instruction google-translate-attr'><%- vocabulary['password'][language] %></label>
									<% } %>
									<div class='input-group'>
										<input type='password' id='new-password' name='new_password' autocomplete='new-password' <% if (!locals.data?.uuid) { %>required<% } %> <% if (!editable) { %>disabled<% } %>>
										<label for='new-password' class='google-translate-attr'><%- vocabulary['password'][language] %></label>
									</div>
								</li>
								<li>
									<div class='required'>
										<label class='active'>*</label>
									</div>
									<% if (locals.data?.uuid) { %>
										<label class='instruction google-translate-attr'><%- vocabulary['confirm new password'][language] %></label>
									<% } else { %>
										<label class='instruction google-translate-attr'><%- vocabulary['confirm password'][language] %></label>
									<% } %>
									<div class='input-group'>
										<input type='password' id='confirm-password' name='confirm_password' autocomplete='confirm-password' <% if (!locals.data?.uuid) { %>required<% } %> <% if (!editable) { %>disabled<% } %>>
										<label for='confirm-password' class='google-translate-attr'><%- vocabulary['password'][language] %></label>
									</div>
								</li>
							</ul>
						</div>
						<% } // password fields %>
					<% } %>
					<div class='secondary-info info'>
						<ul>
							<li>
								<div class='required'>
									<label class='active'>*</label>
								</div>
								<label for='user-country' class='instruction google-translate-attr'><%- vocabulary['country'][language] %></label>
								<div class='select'>
									<input type='text' id='new-country' autocomplete='new-country' value='<%- locals.data?.country %>' <% if (!editable) { %>disabled<% } %>>
									<label for='new-country' class='google-translate-attr'><%- vocabulary['select country'][language] %></label>
									<% if (editable) { %>
										<div class='dropdown'>
											<menu>
												<% locals.countries.forEach(d => { %>
													<li>
														<input type='radio' id='ctr-<%- d.iso3 %>' name='iso3' value='<%- d.iso3 %>' data-label='<%- d.name.capitalize() %>' required <% if (locals.data?.iso3 === d.iso3) { %>checked<% } %>>
														<label for='ctr-<%- d.iso3 %>'><%- d.name.capitalize() %></label>
													</li>
												<% }) %>
											</menu>
										</div>
									<% } %>
								</div>
							</li>
							<li>
								<div class='required'>
									<label class='active'>*</label>
								</div>
								<label class='instruction google-translate-attr'><%- vocabulary['preferred language'][language] %></label>
								<div class='select'>
									<input type='text' id='new-language' autocomplete='new-language' value='<%- locals.data?.languagename %>' <% if (!editable) { %>disabled<% } %>>
									<label for='new-language' class='google-translate-attr'><%- vocabulary['select language'][language]['singular'] %></label>
									<% if (editable) { %>
										<div class='dropdown'>
											<menu>
												<% locals.languages.forEach(d => { %>
													<li>
														<input type='radio' id='language-<%- d.language %>' name='language' value='<%- d.language %>' data-label='<%- d.name.capitalize() %>' required <% if (locals.data?.language === d.language) { %>checked<% } %>>
														<label for='language-<%- d.language %>'><%- d.name.capitalize() %></label>
														<!-- TO DO: TRANSLATE LANGUAGE NAMES (e.g. FRENCH TO FRANÃ‡AIS) -->
													</li>
												<% }) %>
											</menu>
										</div>
									<% } %>
								</div>
							</li>
							<% if (editable) { %>
								<!-- ADD OTHER FLUENT LANGUAGES -->
								<li>
								<% if (locals.data?.secondary_languages?.length > 0) { %>
									<label class='instruction google-translate-attr'><%- vocabulary['other languages'][language] %></label>
									<div class='select'>
										<input type='text' id='secondary-languages' autocomplete='secondary-languages' value='<%- locals.languages.filter(d => locals.data?.secondary_languages?.includes(d.language)).map(d => d.name).join(", ") %>' <% if (!editable) { %>disabled<% } %>>
										<label for='secondary-languages' class='google-translate-attr'><%- vocabulary['select language'][language]['plural'] %></label>
										<% if (editable) { %>
											<div class='dropdown'>
												<menu>
													<% locals.languages.forEach(d => { %>
														<li>
															<input type='checkbox' id='secondary-language-<%- d.language %>' name='secondary_languages' value='<%- d.language %>' data-label='<%- d.name.capitalize() %>' <% if (locals.data?.secondary_languages.includes(d.language)) { %>checked<% } %> <% if (locals.data?.language === d.language) { %>disabled<% } %>>
															<label for='secondary-language-<%- d.language %>'><%- d.name.capitalize() %></label>
															<!-- TO DO: TRANSLATE LANGUAGE NAMES (e.g. FRENCH TO FRANÃ‡AIS) -->
														</li>
													<% }) %>
												</menu>
											</div>
										<% } %>
									</div>
								<% } else { %>
									<button class='add-info google-translate-attr' type='button' onclick='addLanguage(this.parentNode)'>
										<span class='add-circle'>+</span><%- vocabulary['add other languages'][language] %>
									</button>
								<% } %>
								</li>
							<% } %>
							<!-- IF THIS IS CREATED FOR SOMEONE, SET RIGHTS -->
							<% if (editable && locals.data?.uuid !== uuid) { %>
								<li>
									<% if (editable && locals.data?.uuid !== uuid) { %>
										<div class='required'>
											<label class='active'>*</label>
										</div>
									<% } %>
									<label class='instruction google-translate-attr'><%- vocabulary['user rights'][language] %></label>
									<div class='select'>
										<% if (editable && (!locals.data || locals.data?.rights <= rights)) { %>
											<input type='text' id='new-rights' value='<%- locals.data?.rights %>'<% if (editable && locals.data?.uuid === uuid) { %> disabled<% } %>>
											<label for='new-rights' class='google-translate-attr'><%- vocabulary['grant rights'][language] %></label>
											<% if (editable && locals.data?.uuid !== uuid) { %>
												<div class='dropdown'>
													<menu>
														<% for (let i = 0; i <= rights; i ++) { %>
															<li>
																<input type='radio' id='rights-<%- i %>' name='rights' value='<%- i %>' data-label='<%- i %>' required <% if (locals.data?.rights === i) { %>checked<% } %>>
																<label for='rights-<%- i %>'><%- i %></label>
																<!-- TO DO: DESCRIBE RIGHTS
																	0 - no rights
																	1 - external
																	2 - internal
																	3 - admin
																-->
															</li>
														<% } %>
													</menu>
												</div>
											<% } %>
										<% } else { %>
											<input type='hidden' name='rights' value='<%- locals.data?.rights %>'>
											<input type='text' id='new-rights' value='<%- locals.data?.rights %>' disabled>
										<% } %>
									</div>
								</li>
							<% } %>
							<% if (modules.some(d => d.type === 'teams' && rights >= d.rights.write)
								&& (!locals.data || locals.data?.host_editor)
							) { %>
								<li>
									<label class='instruction google-translate-attr'><%- vocabulary['teams'][language] %></label>
									<div class='add select'>
										<input type='text' id='new-team' <% if (!editable && !locals.data?.host_editor) { %>disabled<% } %>>
										<label for='new-team' class='google-translate-attr'><%- vocabulary['assign to teams'][language] %></label>
										<% if (editable || locals.data?.host_editor) { %>
											<button type='button' id='add-new-team'></button>
											<div class='dropdown'>
												<menu>
													<% locals.teams.forEach(d => { %>
														<li>
															<input type='checkbox' id='team-<%- d.id %>' name='teams' value='<%- d.id %>' data-label='<%- d.name %>' <% if (locals.data?.teams.some(c => c.id === d.id)) { %>checked<% } %>>
															<label for='team-<%- d.id %>' class='title'><%- d.name %></label>
														</li>
													<% }) %>
												</menu>
											</div>
										<% } %>
									</div>
									<div class='pinboard-group margin-left<% if (!locals.data?.teams.length) { %> hide<% } %>'>
										<div class='pinboard'>
											<div class='pins'>
												<% locals.data?.teams.forEach(d => { %>
													<div class='pin tag'>
														<label class='name notranslate'><%- d.name %></label>
														<label class='close' data-id='<%- d.id %>' data-name='teams' onclick='rmPin(this)'>x</label>
													</div>
												<% }) %>
											</div>
										</div>
									</div>
								</li>
							<% } else if (modules.some(d => d.type === 'teams' && rights >= d.rights.read)
								&& locals.data?.teams?.length
							) { %>
								<li class='google-translate-attr'>
									<label class='instruction'><%- vocabulary['teams'][language] %></label>
									<div class='pinboard-group'>
										<div class='pinboard'>
											<div class='pins'>
												<% locals.data?.teams.forEach(d => { %>
													<div class='pin tag'>
														<label class='name notranslate'><%- d.name %></label>
													</div>
												<% }) %>
											</div>
										</div>
									</div>
								</li>
							<% } %>
						</ul>
					</div>
					<div class='secondary-info info'>
						<ul>
							<% if (modules.some(d => d.type === 'reviews' && rights >= d.rights.write)) { %>
								<li class='google-translate-attr'>
									<label class='instruction'><%- vocabulary['accept to review'][language] %></label>
									<div class='input-group'>
										<input type='checkbox' id='accept-reviews' name='reviewer' value='true' class='toggle' data-object='contributor' onchange='toggleOptions(this)' <% if (locals.data?.reviewer) { %>checked<% } %><% if (!editable) { %> disabled<% } %>>
										<label for='accept-reviews' data-content='<% if (locals.data?.reviewer) { %><%- vocabulary["yes"][language].toUpperCase() %><% } else { %><%- vocabulary["no"][language].toUpperCase() %><% } %>'></label>
									</div>
								</li>
							<% } %>
							<li class='google-translate-attr'>
								<label class='instruction'><%- vocabulary['email notifications'][language] %></label>
								<div class='input-group'>
									<input type='checkbox' id='email-notifications' name='email_notifications' value='true' class='toggle' data-object='contributor' onchange='toggleOptions(this)' <% if (locals.data?.notifications) { %>checked<% } %><% if (!editable) { %> disabled<% } %>>
									<label for='email-notifications' data-content='<% if (locals.data?.notifications) { %><%- vocabulary["yes"][language].toUpperCase() %><% } else { %><%- vocabulary["no"][language].toUpperCase() %><% } %>'></label>
								</div>
							</li>
						</ul>
					</div>
				</form>
			</div>
			<div class='foot'>
				<% if (editable && locals.data?.uuid) { %>
					<div class='api-token'>
						<form>
							<!-- TO DO: TRANSLATE -->
							<button class='request-token' type='button' onclick='requestToken(this.form)'>Request an API token</button>
							<div class='input-group'>
								<input type='text' name='api-token' class='hide' onclick='this.select()' readonly>
								<button type='button' class='copy hide google-translate-attr' onclick='copyToken(this.form)'><%- vocabulary['copy'][language]['verb'] %></button>
							</div>
						</form>
					</div>
				<% } %>
				<% if (locals.data?.pads > 0) { %>
					<div class='user-content py-5'>
						<a href='../browse/pads/public?contributors=<%- locals.data?.uuid %>' target='_blank'><%- vocabulary['browse publications'][language] %></a>
					</div>
				<% } %>

				<% if (locals.data?.uuid === locals.metadata.user.uuid) { %>
					<%- include('../../partials/sessions-alert.ejs') %>
				<% } %>

				<% if (locals.data?.uuid === locals.metadata.user.uuid) { %>
					<%- include('../../partials/trusted-device.ejs') %>
				<% } %>
			</div>
		</div>
	</main>
</div>

<div class='sidebar lg xl xxl'></div>
</div>

<footer></footer>
<%- include ('../../partials/footer.ejs') %>

<script type='text/javascript' nonce='<%= locals.metadata.page.nonce %>'>
	if (!mediaSize) var mediaSize = getMediaSize()

	<% if (locals.data?.uuid && editable) { %>
		d3.select('button#reset-password')
		.on('click', function () {
			d3.select('.old-password-info')
				.style('max-height', function () { return `${this.scrollHeight}px` })
			.selectAll('input[type=password]')
				.each(function () { this.required = true })

			d3.select('.meta-status button').attr('disabled', true)

			d3.select(this).remove()
		})

		d3.select('input#old-password')
		.on('keydown', function () {
			const evt = d3.event
			if (evt.code === 'Enter' || evt.keyCode === 13) {
				evt.preventDefault()
			}	
		}).on('keyup', function () {
			const evt = d3.event
			if (evt.code === 'Enter' || evt.keyCode === 13) {
				evt.preventDefault()
				d3.select('button#check-old-password').node().click()
			}
		})

		d3.select('button#check-old-password')
		.on('click', async function () {
			const pwsel = d3.select('input#old-password')
			const pw = pwsel.node().value.trim()
			pwsel.classed('error', pw.length === 0)

			if (!pwsel.classed('error')) {
				const cleared = await POST('/check/password', { id: '<%- locals.data?.uuid %>', password: pw })
				if (cleared.status === 200) {
					d3.select('.password-info')
						.style('max-height', function () { return `${this.scrollHeight}px` })
					.selectAll('input[type=password]')
						.each(function () { this.required = true })

					d3.select('.old-password-info').remove()
				} else {
					pwsel.classed('error', true)
					alert(cleared.message)
				}
			}
		})
	<% } %>

	function initDropdowns () {
		const selects = d3.selectAll('.select')
		selects.selectAll('input[type=text]')
		.on('keyup', function () {
			const node = this

			const dropdown = d3.select(node).findAncestor('select').select('.dropdown')
			dropdown.selectAll('menu li')
				.classed('hide', function () {
					return !this.textContent.trim().toLowerCase()
						.includes(node.value.trim().toLowerCase())

					&& (!dropdown.selectAll('menu li input:checked').size() || !Array.from(dropdown.selectAll('menu li input:checked').nodes())
						.every(sel => {
							return node.value.trim().toLowerCase().split(',')
							.map(d => d.trim())
							.includes(sel.parentNode.textContent.trim().toLowerCase())
						}))
				})
		}).on('focus', function () {
			const select = d3.select(this).findAncestor('select')
			const dropdown = select.select('.dropdown')
			dropdown.node().style.maxHeight = `${Math.min(dropdown.node().scrollHeight, 300)}px`

			dropdown.selectAll('label').on('mousedown', function () {
				d3.event.preventDefault()
			})

			if (mediaSize === 'xs') select.classed('expand', true)

		}).on('blur', function () {
			const select = d3.select(this).findAncestor('select')
			const dropdown = select.select('.dropdown')
			dropdown.node().style.maxHeight = null

			if (mediaSize === 'xs') {
				setTimeout(_ => select.classed('expand', false), 250)
			}
		})

		selects.selectAll('input[type=radio]')
		.on('change', function () {
			const node = this
			const sel = d3.select(node)
			sel.findAncestor('select')
				.select('input[type=text]')
				.node().value = node.dataset.label

			d3.selectAll('input[name="secondary_languages"]')
			.attr('disabled', function () { return this.value === node.value ? true : null })
		})

		selects.selectAll('input[type=checkbox]')
		.on('change', function () {
			const node = this
			const sel = d3.select(node)

			const values = []
			sel.findAncestor('menu').selectAll('input[type=checkbox]:checked')
				.each(function () { values.push(this.dataset.label) })

			sel.findAncestor('select')
				.select('input[type=text]')
				.node().value = values.join(', ')
		})

		<% if (modules.some(d => d.type === 'teams' && rights >= d.rights.write)) { %>
			selects.select('input#new-team')
			.on('keydown', function () {
				const evt = d3.event
				if (evt.code === 'Enter' || evt.keyCode === 13) {
					evt.preventDefault()
				}	
			}).on('keyup.checkEnter', function (d) {
				const evt = d3.event
				const node = this
				const newpin = d3.select(this).findAncestor('add')

				if (evt.code === 'Enter' || evt.keyCode === 13) {
					evt.preventDefault()
					newpin.select('button').node().click()
				}
			})

			selects.selectAll('input[name=teams]')
			.on('change', function () {
				renderPin.call(this)
			})
			selects.select('button#add-new-team')
			.on('click', async function (d) {
				const newpin = d3.select(this).findAncestor('add')
				const node = newpin.select('input[type=text]').node()

				if (node.value.trim().length) {
					const dropdown = newpin.select('.dropdown')

					const existingBoard = dropdown.selectAll('menu li:not(.hide) .title').filter(function () {
						return this.textContent.trim().toLowerCase() === node.value.trim().toLowerCase()
					})
					// IF EXIST, JUST CHECK IT
					if (existingBoard.node()) {
						const pinItem = existingBoard.node().previousElementSibling
						pinItem.checked = true
						renderPin.call(pinItem)
					} else {
						addPinOption.call(dropdown.node(), node.value.trim())
					}
					
					// RESET DROPDOWN
					this.value = ''
					dropdown.selectAll('menu li').classed('hide', false)
				}
			})
		<% } %>
	}

	initDropdowns()

</script>

</body>
</html>
