<% 
	if (!locals.lang) locals.lang = locals.path[0]
	if (!locals.object) locals.object = locals.path[2]
	if (!locals.space) locals.space = locals.path[3]

	if (!locals.queryparams) locals.queryparams = {}
	if (!locals.sdgs) locals.sdgs = []
	if (!locals.thematic_areas) locals.thematic_areas = []
	if (!locals.templates) locals.templates = []
	if (!locals.mappers) locals.mappers = []

	Array.prototype.sum = function (key) {
		if (this.length === 0) return 0
		if (!key) {
			return this.reduce((accumulator, value) => accumulator + value)
		}
		else {
			return this.reduce((accumulator, value) => {
				const obj = {}
				obj[key] = accumulator[key] + value[key]
				return obj
			})[key]
		}
	}
	Array.prototype.unique = function (key, onkey) {
		const arr = []
		this.forEach(d => {
			if (!key) {
				if (arr.indexOf(d) === -1) arr.push(d)
			}
			else {
				if (onkey) { if (arr.map(c => c).indexOf(d[key]) === -1) arr.push(d[key]) }
				else { 
					if (typeof key === 'function') { if (arr.map(c => key(c)).indexOf(key(d)) === -1) arr.push(d) }
					else { if (arr.map(c => c[key]).indexOf(d[key]) === -1) arr.push(d) }
				}
			}
		})
		return arr
	}
%>
<nav id='filter' class='<% if (Object.keys(locals.queryparams).length) { %>open<% } %>'>
	<div class='handle' onclick='this.parentNode.classList.toggle("open")'><div><%- vocabulary['filter'][locals.lang](true) %></div></div>
	<form action='' method='GET'><!-- WE KEEP ACTION EMPTY BECAUSE JUST AN EXTENSION OF CURRENT ENDPOINT -->
		<div class='query'>
			<% if (locals.queryparams.query && locals.queryparams.query.length) { %>
				<input type='text' name='query' id='search-field' class='has-value' value='<%- locals.queryparams.query.join(" OR ") %>' onblur='fixLabel(this)'>
			<% } else { %>
				<input type='text' name='query' id='search-field' onblur='fixLabel(this)'>
			<% } %>
			<label for='search-field'><%- vocabulary["search"][locals.lang] %></label>
			<button id='search'><i class='material-icons'>search</i></button>
		</div>
		<ul class='filters'>
			<li class='title'>
				<h1><%- vocabulary['filter'][locals.lang](false, true) %></h1>
				<div class='active'>
					<% for (let key in locals.queryparams) { %>
						<% locals.queryparams[key].forEach(d => { %>
							<div class='tag'>
								<label>
									<% if (key === 'query') { %><%- d %>
									<% } else if (key === 'sdgs') { %><%- `${vocabulary['SDG'][locals.lang](false)} ${d}` %>
									<% } else if (key === 'thematic_areas') { %><%- d.capitalize() %>
									<% } else if (key === 'templates' && locals.templates) {
											let t = locals.templates.find(c => +c.id == +d)
											let title = ''
											if (t) { 
												title = t.title.length > 25 ? `${t.title.slice(0, 25).capitalize()}…` : t.title.capitalize()
											} else {
												title = vocabulary['untitled template'][locals.lang]
											}
									%><%- title %>
									<% } else if (key === 'mobilizations' && locals.mobilizations) {
											const m = locals.participations.find(c => +c.id == +d)
											const title = m.title.length > 25 ? `${m.title.slice(0, 25).capitalize()}…` : m.title.capitalize()
									%><%- title %>
									<% } else if (key === 'mappers' && locals.mappers) { 
											let m = locals.mappers.find(c => +c.id === +d)
											let name = ''
											if (m) name = m.name
											else name = 'Missing contributor'
									%><%- name %>
									<% } %>
								</label>
								<i class='material-icons' onclick='rmFilter("<%- key %>", <%- JSON.stringify(d) %>)'>close</i>
							</div>
						<% }) %>
					<% } %>
				</div>
			</li>
			<% if (locals.object === 'pads' && locals.sdgs.length > 0) { %>
				<li class='filter'>
					<button type='button' class='accordion' onclick='accordion(this)'>
						<i class='material-icons'>keyboard_arrow_right</i>
						<%- vocabulary['SDG'][locals.lang](true) %>		
					</button>
					<ul class='panel'>
						<!-- WE NEED TO DO SOME STITCHING TOGETHER HERE AS THE COUNTS ARE SEPARATED BY PAD STATUS -->
						<% locals.sdgs.unique('key').forEach((s, i) => { 
							s.count = locals.sdgs.filter(d => d.key === s.key).map(d => +d.count).sum()
						%>
							<li class='opt <% if (locals.queryparams.sdgs && locals.queryparams.sdgs.includes(s.key.toString())) { %>checked<% } %>'>
								<div class='hide'>
									<input type='checkbox' name='sdgs' id='sdgs-<%- i %>' value='<%- s.key %>' onChange='this.form.submit()' <% if (locals.queryparams.sdgs && locals.queryparams.sdgs.includes(s.key.toString())) { %>checked<% } %>>
								</div>
								<div><label for='sdgs-<%- i %>'><strong><%= s.key %>.</strong></label></div>
								<div class='grow'><label for='sdgs-<%- i %>'><%= s.name %></label></div>
								<div class='count'><label for='sdgs-<%- i %>'><%= s.count %></label></div>
							</li>
						<% }) %>
					</ul>
				</li>
			<% } %>
			<% if (locals.object === 'pads' && locals.thematic_areas.length > 0) { %>
				<li class='filter'>
					<button type='button' class='accordion' onclick='accordion(this)'>
						<i class='material-icons'>keyboard_arrow_right</i>
						<%- vocabulary['thematic area'][locals.lang](true) %>
					</button>
					<ul class='panel'>
						<!-- WE NEED TO DO SOME STITCHING TOGETHER HERE AS THE COUNTS ARE SEPARATED BY PAD STATUS -->
						<% locals.thematic_areas.unique('name').forEach((t, i) => { 
							t.count = locals.thematic_areas.filter(d => d.name === t.name).map(d => +d.count).sum()
						%>
							<li class='opt <% if (locals.queryparams.thematic_areas && locals.queryparams.thematic_areas.includes(t.name)) { %>checked<% } %>'>
								<div class='hide'>
									<input type='checkbox' name='thematic_areas' id='thematic_areas-<%- i %>' value='<%- t.name %>' onChange='this.form.submit()' <% if (locals.queryparams.thematic_areas && locals.queryparams.thematic_areas.includes(t.name)) { %>checked<% } %>>
								</div>
								<div class='grow'><label for='thematic_areas-<%- i %>'><%- t.name.capitalize() %></label></div>
								<div class='count'><label for='thematic_areas-<%- i %>'><%- t.count %></label></div>
							</li>
						<% }) %>
					</ul>
				</li>
			<% } %>
			<% if (locals.object === 'pads') { %>
				<li class='filter'>
					<button type='button' class='accordion' onclick='accordion(this)'>
						<i class='material-icons'>keyboard_arrow_right</i>
						<%- vocabulary['templated doc'][locals.lang](true) %>
					</button>
					<ul class='panel'>
						<% locals.templates.unique('id').forEach((t, i) => { %>
							<li class='opt <% if (locals.queryparams.templates && locals.queryparams.templates.includes(t.id.toString())) { %>checked<% } %>'>
								<div class='hide'>
									<input type='checkbox' name='templates' id='templates-<%- i %>' value='<%- t.id %>' data-name='<%- t.title %>' onChange='this.form.submit()' <% if (locals.queryparams.templates && locals.queryparams.templates.includes(t.id.toString())) { %>checked<% } %>>
								</div>
								<div class='grow'>
									<% if (t.title) { %>
										<label for='templates-<%- i %>' title='<%- t.title %>'><%- t.title %></label>
									<% } else { %>
										<label for='templates-<%- i %>' title='Untitled template'><%- vocabulary['untitled template'][locals.lang] %></label>
									<% } %>
								</div>
								<div class='count'><label for='template-<%- i %>'><%- t.count %></label></div>
							</li>
						<% }) %>
					</ul>
				</li>
			<% } %>
			<li class='filter'>
				<button type='button' class='accordion' onclick='accordion(this)'>
					<i class='material-icons'>keyboard_arrow_right</i>
					<%# vocabulary['templated doc'][locals.lang](true) %>
					<!-- TO DO TRANSLATION -->
					Mobilizations
				</button>
				<ul class='panel'>
					<% locals.mobilizations.unique('id').forEach((m, i) => { %>
						<li class='opt <% if (locals.queryparams.mobilizations && locals.queryparams.mobilizations.includes(m.id.toString())) { %>checked<% } %>'>
							<div class='hide'>
								<input type='checkbox' name='mobilizations' id='mobilizations-<%- i %>' value='<%- m.id %>' data-name='<%- m.title %>' onChange='this.form.submit()' <% if (locals.queryparams.mobilizations && locals.queryparams.mobilizations.includes(m.id.toString())) { %>checked<% } %>>
							</div>
							<div class='grow'>
								<% if (m.title) { %>
									<label for='mobilizations-<%- i %>' title='<%- m.title %>'><%- m.title %></label>
								<% } else { %>
									<label for='mobilizations-<%- i %>' title='Untitled mobilization'><%- vocabulary['untitled template'][locals.lang] %></label>
									<!-- TO DO: TRANSLATION -->
								<% } %>
							</div>
							<div class='count'><label for='mobilizations-<%- i %>'><%- m.count %></label></div>
						</li>
					<% }) %>
				</ul>
			</li>
			<li class='filter'>
				<button type='button' class='accordion' onclick='accordion(this)'>
					<i class='material-icons'>keyboard_arrow_right</i>
					<%- vocabulary['contributor'][locals.lang](true) %>
				</button>
				<ul class='panel'>
					<% locals.mappers.unique('id').forEach((m, i) => { %>
						<li class='opt <% if (locals.queryparams.mappers && locals.queryparams.mappers.includes(m.id.toString())) { %>checked<% } %>'>
							<div class='hide'>
								<input type='checkbox' name='mappers' id='mappers-<%- i %>' value='<%- m.id %>' data-name='<%- m.name %>' onChange='this.form.submit()' <% if (locals.queryparams.mappers && locals.queryparams.mappers.includes(m.id.toString())) { %>checked<% } %>>
							</div>
							<div class='grow'><label for='mappers-<%- i %>'><%- m.name %></label></div>
							<div class='count'><label for='mappers-<%- i %>'><%- m.count %></label></div>
						</li>
					<% }) %>
				</ul>
			</li>
		</ul>
	</form>
</nav>

<script type='text/javascript'>
	// NOTE: THERE IS A PB IN THE SEARCH FIELD WITH OR OPERATORS
	function rmFilter (key, d) {
		if (key === 'query') {
			const sel = d3.select('#search-field')
			let value = sel.node().value
			if (value.includes(`${d} OR`)) sel.node().value = value.replace(`${d} OR`, '').trim()
			else if (value.includes(d)) sel.node().value = value.replace(d, '').trim()
			d3.select('button#search').node().click()
		} else {
			const sel = d3.select(`input[name="${key}"][value="${d}"]`) // TO DO: FIX PB HERE SINCE THE MENUS ARE UPDATED ACCODRING TO FILTER, THERE MAY NO LONGER BE A sel TO FIND IN THE FILTER MENU
			if (sel.node()) {
				const opt = sel.findAncestor('opt')
				sel.attr('checked', sel.node().checked ? null : true)
				sel.node().onchange()
			}
		}
	}
	function accordion (node) {
		node.classList.toggle('open')
		const panel = d3.select(node).findAncestor('filter').select('.panel').node()
		panel.style.maxHeight = panel.style.maxHeight ? null : `${panel.scrollHeight}px`
	}
</script>